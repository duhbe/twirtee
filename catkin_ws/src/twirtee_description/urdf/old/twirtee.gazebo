<?xml version="1.0"?>
<robot name="twirtee" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- (C) Eric JENN 2019 -->

<!-- For more information about Gazebo extensions, 
     see http://gazebosim.org/tutorials?tut=ros_gzplugins -->

<!-- The materials can be found in /usr/share/gazebo-9/media/materials/ --> 
<!-- or at http://wiki.ros.org/simulator_gazebo/Tutorials/ListOfMaterials -->

  <gazebo reference="chassis">
	<visual>
		<material>
        	        <script>
         	           <uri>file://media/materials/scripts/gazebo.material</uri>
         	           <name>Gazebo/Pioneer2Body</name>
         	       </script>
         	   </material>
	</visual>
  </gazebo>

<!-- ########################################### -->
<!-- Set the collision flag for the arm          -->
<!-- ########################################### -->
<gazebo reference="link1">
	<selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="link2">
	<selfCollide>true</selfCollide>
	<material>Gazebo/Green</material>
</gazebo>

<gazebo reference="link3">
	<selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="link4">
	<selfCollide>true</selfCollide>
	<material>Gazebo/Green</material>
</gazebo>

<gazebo reference="link5">
	<selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="finger">
	<selfCollide>true</selfCollide>
	<material>Gazebo/Red</material>
</gazebo>




<!-- ########################################### -->
<!-- Define the friction coefficient for the caster "wheel" -->
<!-- ########################################### -->
<gazebo reference="caster_wheel">
  <mu1>0.0</mu1>
  <mu2>0.0</mu2>
  <material>Gazebo/Red</material>
</gazebo>


<!-- ########################################### -->
<!--                                             -->
<!-- ########################################### -->
<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/twirtee</robotNamespace>
  </plugin>
</gazebo>

<!-- ########################################### -->
<!-- Configure the differential drive controller -->
<!-- The robot can be driven manually using command: 
$ rosrun turtlesim turtle_teleop_key /turtle1/cmd_vel:=/twirtee/cmd_vel -->
<!-- ########################################### -->
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>10</updateRate>
    <leftJoint>left_wheel_hinge</leftJoint>
    <rightJoint>right_wheel_hinge</rightJoint>
    <wheelSeparation>${chassisRadius*2+wheelWidth}</wheelSeparation>
    <wheelDiameter>${2*wheelRadius}</wheelDiameter>
    <torque>20</torque>
    <commandTopic>twirtee/cmd_vel</commandTopic>
    <odometryTopic>twirtee/odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>footprint</robotBaseFrame>
  </plugin>
</gazebo>

<!-- #################### -->
<!-- Configure the camera -->
<!-- #################### -->
<gazebo reference="camera">
  <material>Gazebo/Blue</material>
  <sensor type="camera" name="camera1">
    <update_rate>30.0</update_rate>
    <camera name="head">
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>800</width>
        <height>800</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>300</far>
      </clip>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <cameraName>twirtee/camera1</cameraName>
      <imageTopicName>image_raw</imageTopicName>
      <cameraInfoTopicName>camera_info</cameraInfoTopicName>
      <frameName>camera</frameName>
      <hackBaseline>0.07</hackBaseline>
      <distortionK1>0.0</distortionK1>
      <distortionK2>0.0</distortionK2>
      <distortionK3>0.0</distortionK3>
      <distortionT1>0.0</distortionT1>
      <distortionT2>0.0</distortionT2>
    </plugin>
  </sensor>
 </gazebo>

<!-- ################### -->
<!-- Configure the LIDAR -->
<!-- ################### -->
<!-- Definition of the LIDAR sensor located on top of the LIDAR link -->
<!-- The plugin may be changed to libgazebo_ros_gpu_laser to use the GPU -->
<gazebo reference="rplidar_top">
	<sensor type="ray" name="sensor">
		<visualize>true</visualize>
		<update_rate>30</update_rate>
		<ray>
			<scan>
				<horizontal>
					<samples>180</samples>
					<resolution>1</resolution>
					<min_angle>-3.14159265</min_angle>
					<max_angle>3.14159265</max_angle>
				</horizontal>
			</scan>
			<range>
				<min>0.2</min>
				<max>30</max>
				<resolution>0.01</resolution>
			</range>
			<noise>
				<type>gaussian</type>
				<mean>0.0</mean>
				<stddev>0.1</stddev>
			</noise>
		</ray>
		<plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
			<topicName>/twirtee/lidar</topicName>
			<frameName>rplidar_top</frameName>
		</plugin>
	</sensor>  
</gazebo>

	
</robot>

